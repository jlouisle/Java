package model;
import java.util.ArrayList;

import utility.Sellable;
import utility.AnimalType;

public class Animal implements Sellable {
	
	

	private String name;
	private int weight;
	private AnimalType anTy;

	//Constructor
	public Animal(String name, int weight, AnimalType v) {
		super();
		this.name = name;
		this.weight = weight;
		this.anTy = v;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	private ArrayList<Treatment> treatments = new ArrayList<Treatment>();
	private String currency = "USD";


	public double getPrice() {
		double tPrice = 0;
		for (Treatment x: treatments)
			tPrice += x.getPrice();
		if(tPrice < 0)
			throw new IllegalStateException("Animal has a treatment costing less than zero; cannot be!");
		return tPrice;
	}
	
	@Override
	public String toString() {
		return anTy + " " + name + ", price: " + getPrice() + " " + currency;
	}
	public void addTreatment(Treatment n){
		treatments.add(n);
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getWeight() {
		return weight;
	}
	public AnimalType getV() {
		return anTy;
	}
	public String getCurrency() {
		return currency;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((anTy == null) ? 0 : anTy.hashCode());
		result = prime * result + weight;
		return result;
	}
}
